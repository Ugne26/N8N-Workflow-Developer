{
  "name": "Reddit Log",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 2
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -656,
        -352
      ],
      "id": "5ff12289-64fe-4c02-a9a0-76019ce85abf",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "={{ $json.feed_url }}",
        "options": {
          "ignoreSSL": false
        }
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        0,
        -352
      ],
      "id": "473be1c0-7bf2-4d16-a399-7027f3051c32",
      "name": "RSS Read"
    },
    {
      "parameters": {
        "jsCode": "const timeZone = \"Europe/Bucharest\";\n\n// Get today's date in the desired timezone (formatted as YYYY-MM-DD)\nconst now = new Date();\nconst today = now.toLocaleDateString(\"en-CA\", { timeZone });\n\nreturn items\n  .map(item => {\n    const postDate = new Date(item.json.pubDate);\n    const postLocal = postDate.toLocaleDateString(\"en-CA\", { timeZone });\n\n    return {\n      json: {\n        guid: item.json.guid || item.json.link,\n        title: item.json.title,\n        link: item.json.link,\n        date: postLocal,\n        creator: item.json.creator || item.json[\"dc:creator\"] || \"unknown\",\n        snippet: item.json.contentSnippet || item.json.content || \"(no caption)\"\n      }\n    };\n  })\n  .filter(item => item.json.date === today);\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        -352
      ],
      "id": "6f0cb821-c798-4c7c-8ce7-042b11bcec05",
      "name": "Code",
      "executeOnce": false,
      "alwaysOutputData": false,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "17-EsdJPMCVIMf9tRP9cUyx9HQnWpUxG3VhBTjDQrYg4",
          "mode": "list",
          "cachedResultName": "n8n DATABASE",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/17-EsdJPMCVIMf9tRP9cUyx9HQnWpUxG3VhBTjDQrYg4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Social Media Daily",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/17-EsdJPMCVIMf9tRP9cUyx9HQnWpUxG3VhBTjDQrYg4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "DATE": "={{ $json.date }}",
            "CREATOR": "={{ $json.creator }}",
            "PLATFORM": "Reddit",
            "CONTENT": "={{ $json.snippet }}",
            "CONTENT LINK": "={{ $json.link }}",
            "STATUS": "Not Sent",
            "GUID": "={{ $json.guid }}",
            "TITLE": "={{ $json.title }}"
          },
          "matchingColumns": [
            "GUID"
          ],
          "schema": [
            {
              "id": "DATE",
              "displayName": "DATE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PLATFORM",
              "displayName": "PLATFORM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CREATOR",
              "displayName": "CREATOR",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "TITLE",
              "displayName": "TITLE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CONTENT",
              "displayName": "CONTENT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CONTENT LINK",
              "displayName": "CONTENT LINK",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "GUID",
              "displayName": "GUID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        448,
        -352
      ],
      "id": "828aa591-c78f-4bb9-b705-11cd6ccb6b90",
      "name": "Google Sheets"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"input_link\": \"https://www.reddit.com/r/technology/\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -448,
        -352
      ],
      "id": "2a962472-fc87-4466-97c7-574d455cdab1",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "const link = $input.first().json.input_link || '';\nlet feedUrl = '';\nlet creator = 'Unknown';\n\n// Reddit user profile\nif (link.includes('reddit.com/user/')) {\n  const username = link.split('/user/')[1].split(/[/?#]/)[0];\n  feedUrl = `https://www.reddit.com/user/${username}.rss`;\n  creator = username;\n}\n// Reddit subreddit\nelse if (link.includes('reddit.com/r/')) {\n  const subreddit = link.split('/r/')[1].split(/[/?#]/)[0];\n  feedUrl = `https://www.reddit.com/r/${subreddit}.rss`;\n  creator = subreddit;\n}\nelse {\n  throw new Error('Invalid Reddit link');\n}\n\nreturn [{\n  json: {\n    feed_url: feedUrl,\n    creator\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -224,
        -352
      ],
      "id": "57226a51-d698-40c9-a351-71032945e85a",
      "name": "Code1"
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "RSS Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "triggerCount": 0,
  "meta": null
}